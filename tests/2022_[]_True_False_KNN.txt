2022, [], True, False, KNN
categorical_features: ['RF-CAT', 'SEXO', 'TC', 'NC', 'TO', 'ME', 'TURNO']
numerical_features: ['IDA-MÉD']

label_pipeline: knn
base_model: KNeighborsClassifier()
chosen_model: KNeighborsClassifier(metric='euclidean', n_neighbors=9, p=1)
chosen_model.get_params():
{'algorithm': 'auto', 'leaf_size': 30, 'metric': 'euclidean', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 9, 'p': 1, 'weights': 'uniform'}

Grid Params: [{'knn__n_neighbors': [3, 5, 7, 9], 'knn__weights': ['uniform', 'distance'], 'knn__metric': ['euclidean', 'manhattan', 'minkowski'], 'knn__p': [1, 2]}]
best hyperparams grid: {'knn__metric': 'euclidean', 'knn__n_neighbors': 9, 'knn__p': 1, 'knn__weights': 'uniform'}
best score grid params: 0.635940963107006
optimal threshold accuracy: 0.8888888888888888

Scores de roc_curve: [np.float64(0.65), np.float64(0.65), np.float64(0.66), np.float64(0.68), np.float64(0.71), np.float64(0.64), np.float64(0.64), np.float64(0.65), np.float64(0.73), np.float64(0.64)]
Média de roc_curve: 0.66
Desvio padrão de roc_curve: 0.03

Scores de recall: [np.float64(0.31), np.float64(0.31), np.float64(0.31), np.float64(0.41), np.float64(0.37), np.float64(0.22), np.float64(0.22), np.float64(0.26), np.float64(0.4), np.float64(0.3)]
Média de recall: 0.31
Desvio padrão de recall: 0.06
