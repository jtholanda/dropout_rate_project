2021, [], False, False, KNN
categorical_features: ['RF-CAT', 'SEXO', 'TC', 'NC', 'TO', 'ME', 'TURNO']
numerical_features: ['IDA-MÉD']

label_pipeline: knn
base_model: KNeighborsClassifier()
chosen_model: KNeighborsClassifier(metric='euclidean', n_neighbors=9, p=1)
chosen_model.get_params():
{'algorithm': 'auto', 'leaf_size': 30, 'metric': 'euclidean', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 9, 'p': 1, 'weights': 'uniform'}

Grid Params: [{'knn__n_neighbors': [3, 5, 7, 9], 'knn__weights': ['uniform', 'distance'], 'knn__metric': ['euclidean', 'manhattan', 'minkowski'], 'knn__p': [1, 2]}]
best hyperparams grid: {'knn__metric': 'euclidean', 'knn__n_neighbors': 9, 'knn__p': 1, 'knn__weights': 'uniform'}
best score grid params: 0.6972765658263679
optimal threshold accuracy: inf

Scores de roc_curve: [np.float64(0.82), np.float64(0.83), np.float64(0.74), np.float64(0.82), np.float64(0.74), np.float64(0.82), np.float64(0.81), np.float64(0.75), np.float64(0.72), np.float64(0.79)]
Média de roc_curve: 0.78
Desvio padrão de roc_curve: 0.04

Scores de recall: [np.float64(0.26), np.float64(0.42), np.float64(0.27), np.float64(0.48), np.float64(0.34), np.float64(0.51), np.float64(0.38), np.float64(0.31), np.float64(0.28), np.float64(0.43)]
Média de recall: 0.37
Desvio padrão de recall: 0.08
