2023, [2020], True, False, KNN
categorical_features: ['RF-CAT', 'SEXO', 'TC', 'NC', 'TO', 'ME', 'TURNO']
numerical_features: ['IDA-MÉD']

label_pipeline: knn
base_model: KNeighborsClassifier()
chosen_model: KNeighborsClassifier(metric='euclidean', n_neighbors=9, p=1)
chosen_model.get_params():
{'algorithm': 'auto', 'leaf_size': 30, 'metric': 'euclidean', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 9, 'p': 1, 'weights': 'uniform'}

Grid Params: [{'knn__n_neighbors': [3, 5, 7, 9], 'knn__weights': ['uniform', 'distance'], 'knn__metric': ['euclidean', 'manhattan', 'minkowski'], 'knn__p': [1, 2]}]
best hyperparams grid: {'knn__metric': 'euclidean', 'knn__n_neighbors': 9, 'knn__p': 1, 'knn__weights': 'uniform'}
best score grid params: 0.59523119033576
optimal threshold accuracy: 0.7777777777777778

Scores de roc_curve: [np.float64(0.62), np.float64(0.63), np.float64(0.65), np.float64(0.7), np.float64(0.68), np.float64(0.54), np.float64(0.69), np.float64(0.6), np.float64(0.61), np.float64(0.65)]
Média de roc_curve: 0.64
Desvio padrão de roc_curve: 0.04

Scores de recall: [np.float64(0.3), np.float64(0.28), np.float64(0.36), np.float64(0.38), np.float64(0.3), np.float64(0.32), np.float64(0.4), np.float64(0.42), np.float64(0.37), np.float64(0.29)]
Média de recall: 0.34
Desvio padrão de recall: 0.05
