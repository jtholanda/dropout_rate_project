2023, [2020], False, False, Random_Forest
categorical_features: ['RF-CAT', 'SEXO', 'TC', 'NC', 'TO', 'ME', 'TURNO']
numerical_features: ['IDA-MÉD']

label_pipeline: random_forest
base_model: RandomForestClassifier(class_weight='balanced', random_state=0)
chosen_model: RandomForestClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=3, max_features=None, min_samples_leaf=3,
                       min_samples_split=10, random_state=0)
chosen_model.get_params():
{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': 'balanced', 'criterion': 'entropy', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 3, 'min_samples_split': 10, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': None, 'oob_score': False, 'random_state': 0, 'verbose': 0, 'warm_start': False}

Grid Params: [{'random_forest__n_estimators': [100, 300], 'random_forest__criterion': ['gini', 'entropy'], 'random_forest__max_depth': [3, 10, 20], 'random_forest__min_samples_split': [2, 5, 10], 'random_forest__min_samples_leaf': [1, 3, 5], 'random_forest__max_features': ['sqrt', 'log2', None], 'random_forest__bootstrap': [True]}]
best hyperparams grid: {'random_forest__bootstrap': True, 'random_forest__criterion': 'entropy', 'random_forest__max_depth': 3, 'random_forest__max_features': None, 'random_forest__min_samples_leaf': 3, 'random_forest__min_samples_split': 10, 'random_forest__n_estimators': 100}
best score grid params: 0.7160487209753355
optimal threshold accuracy: 0.6544793092598379

Scores de roc_curve: [np.float64(0.74), np.float64(0.77), np.float64(0.75), np.float64(0.74), np.float64(0.78), np.float64(0.74), np.float64(0.73), np.float64(0.77), np.float64(0.77), np.float64(0.69)]
Média de roc_curve: 0.75
Desvio padrão de roc_curve: 0.03

Scores de recall: [np.float64(0.69), np.float64(0.63), np.float64(0.66), np.float64(0.62), np.float64(0.63), np.float64(0.55), np.float64(0.62), np.float64(0.67), np.float64(0.6), np.float64(0.62)]
Média de recall: 0.63
Desvio padrão de recall: 0.04
